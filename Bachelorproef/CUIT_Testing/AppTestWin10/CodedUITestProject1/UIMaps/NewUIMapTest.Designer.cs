// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject1.UIMaps.NewUIMapTestClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITest.Input;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WindowsRuntimeControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class NewUIMapTest
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            XamlEdit uITextBoxEdit = this.UIAppTestWin10Window.UITextBoxEdit;
            #endregion

            // Verify that the 'Text' property of 'textBox' text box equals 'TextBox'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UITextBoxEditText, uITextBoxEdit.Text);
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIAppTestWin10Window UIAppTestWin10Window
        {
            get
            {
                if ((this.mUIAppTestWin10Window == null))
                {
                    this.mUIAppTestWin10Window = new UIAppTestWin10Window();
                }
                return this.mUIAppTestWin10Window;
            }
        }
        
        public UIAppTestWin10sluitenButton UIAppTestWin10sluitenButton
        {
            get
            {
                if ((this.mUIAppTestWin10sluitenButton == null))
                {
                    this.mUIAppTestWin10sluitenButton = new UIAppTestWin10sluitenButton();
                }
                return this.mUIAppTestWin10sluitenButton;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIAppTestWin10Window mUIAppTestWin10Window;
        
        private UIAppTestWin10sluitenButton mUIAppTestWin10sluitenButton;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'textBox' text box equals 'TextBox'
        /// </summary>
        public string UITextBoxEditText = "TextBox";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAppTestWin10Window : XamlWindow
    {
        
        public UIAppTestWin10Window()
        {
            #region Search Criteria
            this.SearchProperties[XamlControl.PropertyNames.Name] = "AppTestWin10";
            this.SearchProperties[XamlControl.PropertyNames.ClassName] = "Windows.UI.Core.CoreWindow";
            this.WindowTitles.Add("AppTestWin10");
            #endregion
        }
        
        #region Properties
        public XamlButton UIButtonButton
        {
            get
            {
                if ((this.mUIButtonButton == null))
                {
                    this.mUIButtonButton = new XamlButton(this);
                    #region Search Criteria
                    this.mUIButtonButton.SearchProperties[XamlButton.PropertyNames.AutomationId] = "button";
                    this.mUIButtonButton.WindowTitles.Add("AppTestWin10");
                    #endregion
                }
                return this.mUIButtonButton;
            }
        }
        
        public XamlEdit UITextBoxEdit
        {
            get
            {
                if ((this.mUITextBoxEdit == null))
                {
                    this.mUITextBoxEdit = new XamlEdit(this);
                    #region Search Criteria
                    this.mUITextBoxEdit.SearchProperties[XamlEdit.PropertyNames.AutomationId] = "textBox";
                    this.mUITextBoxEdit.WindowTitles.Add("AppTestWin10");
                    #endregion
                }
                return this.mUITextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private XamlButton mUIButtonButton;
        
        private XamlEdit mUITextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIAppTestWin10sluitenButton : UITestControl
    {
        
        public UIAppTestWin10sluitenButton()
        {
            #region Search Criteria
            this.TechnologyName = "UIA";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Button";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "AppTestWin10 sluiten";
            this.SearchProperties["FrameworkId"] = null;
            this.WindowTitles.Add("AppTestWin10");
            #endregion
        }
    }
}
