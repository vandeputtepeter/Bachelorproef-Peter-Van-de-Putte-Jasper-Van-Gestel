// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Pokemon_CUIT
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OpenApp - Use 'OpenAppParams' to pass parameters into this method.
        /// </summary>
        public void OpenApp()
        {

            // Launch '%USERPROFILE%\Downloads\DataBindingPokemon\DataBindingPokemon\Poke╠üDex\bin\Debug\Poke╠üDex.exe'
            ApplicationUnderTest pokeüDexApplication = ApplicationUnderTest.Launch(this.OpenAppParams.ExePath, this.OpenAppParams.AlternateExePath);
        }
        
        /// <summary>
        /// GetPokemon
        /// </summary>
        public void GetPokemon()
        {
            #region Variable Declarations
            WpfButton uIGetPokémonButton = this.UIPokédexWindow.UIGetPokémonButton;
            #endregion

            // Click 'Get Pokémon' button
            Mouse.Click(uIGetPokémonButton, new Point(57, 11));
        }
        
        /// <summary>
        /// ClickKadabra
        /// </summary>
        public void ClickKadabra()
        {
            #region Variable Declarations
            WpfListItem uIPokéDexPokemonListItem = this.UIPokédexWindow.UILstPokemonList.UIPokéDexPokemonListItem;
            #endregion

            // Click 'PokéDex.Pokemon' list item
            Mouse.Click(uIPokéDexPokemonListItem, new Point(84, 14));
        }
        
        /// <summary>
        /// ClickFutureSight
        /// </summary>
        public void ClickFutureSight()
        {
            #region Variable Declarations
            WpfListItem uIPokéDexLevelListItem = this.UIPokédexWindow.UIMovesetGroup.UILstMovesList.UIPokéDexLevelListItem;
            #endregion

            // Click 'PokéDex.Level' list item
            Mouse.Click(uIPokéDexLevelListItem, new Point(97, 14));
        }
        
        /// <summary>
        /// VerifyKadabra - Use 'VerifyKadabraExpectedValues' to pass parameters into this method.
        /// </summary>
        public void VerifyKadabra()
        {
            #region Variable Declarations
            WpfText uIKadabraText1 = this.UIPokédexWindow.UIPokémonstatsGroup.UIKadabraText.UIKadabraText1;
            #endregion

            // Verify that the 'Name' property of 'Kadabra' label equals 'Kadabra'
            Assert.AreEqual(this.VerifyKadabraExpectedValues.UIKadabraText1Name, uIKadabraText1.Name);
        }
        
        /// <summary>
        /// CloseApp
        /// </summary>
        public void CloseApp()
        {
            #region Variable Declarations
            WpfButton uIPART_CloseButton = this.UIPokédexWindow.UIPART_CloseButton;
            #endregion

            // Click 'PART_Close' button
            Mouse.Click(uIPART_CloseButton, new Point(13, 14));
        }
        
        #region Properties
        public virtual OpenAppParams OpenAppParams
        {
            get
            {
                if ((this.mOpenAppParams == null))
                {
                    this.mOpenAppParams = new OpenAppParams();
                }
                return this.mOpenAppParams;
            }
        }
        
        public virtual VerifyKadabraExpectedValues VerifyKadabraExpectedValues
        {
            get
            {
                if ((this.mVerifyKadabraExpectedValues == null))
                {
                    this.mVerifyKadabraExpectedValues = new VerifyKadabraExpectedValues();
                }
                return this.mVerifyKadabraExpectedValues;
            }
        }
        
        public UIPokédexWindow UIPokédexWindow
        {
            get
            {
                if ((this.mUIPokédexWindow == null))
                {
                    this.mUIPokédexWindow = new UIPokédexWindow();
                }
                return this.mUIPokédexWindow;
            }
        }
        #endregion
        
        #region Fields
        private OpenAppParams mOpenAppParams;
        
        private VerifyKadabraExpectedValues mVerifyKadabraExpectedValues;
        
        private UIPokédexWindow mUIPokédexWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenApp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class OpenAppParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Downloads\DataBindingPokemon\DataBindingPokemon\Poke╠üDex\bin\Debug\Poke╠üDex.exe'
        /// </summary>
        public string ExePath = "C:\\Users\\Jasper\\Downloads\\DataBindingPokemon\\DataBindingPokemon\\Poke╠üDex\\bin\\Deb" +
            "ug\\Poke╠üDex.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Downloads\DataBindingPokemon\DataBindingPokemon\Poke╠üDex\bin\Debug\Poke╠üDex.exe'
        /// </summary>
        public string AlternateExePath = "%USERPROFILE%\\Downloads\\DataBindingPokemon\\DataBindingPokemon\\Poke╠üDex\\bin\\Debug" +
            "\\Poke╠üDex.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'VerifyKadabra'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class VerifyKadabraExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Kadabra' label equals 'Kadabra'
        /// </summary>
        public string UIKadabraText1Name = "Kadabra";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPokédexWindow : WpfWindow
    {
        
        public UIPokédexWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Pokédex";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Pokédex");
            #endregion
        }
        
        #region Properties
        public WpfButton UIGetPokémonButton
        {
            get
            {
                if ((this.mUIGetPokémonButton == null))
                {
                    this.mUIGetPokémonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIGetPokémonButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "BtnGetpokemon";
                    this.mUIGetPokémonButton.WindowTitles.Add("Pokédex");
                    #endregion
                }
                return this.mUIGetPokémonButton;
            }
        }
        
        public UILstPokemonList UILstPokemonList
        {
            get
            {
                if ((this.mUILstPokemonList == null))
                {
                    this.mUILstPokemonList = new UILstPokemonList(this);
                }
                return this.mUILstPokemonList;
            }
        }
        
        public UIMovesetGroup UIMovesetGroup
        {
            get
            {
                if ((this.mUIMovesetGroup == null))
                {
                    this.mUIMovesetGroup = new UIMovesetGroup(this);
                }
                return this.mUIMovesetGroup;
            }
        }
        
        public UIPokémonstatsGroup UIPokémonstatsGroup
        {
            get
            {
                if ((this.mUIPokémonstatsGroup == null))
                {
                    this.mUIPokémonstatsGroup = new UIPokémonstatsGroup(this);
                }
                return this.mUIPokémonstatsGroup;
            }
        }
        
        public WpfButton UIPART_CloseButton
        {
            get
            {
                if ((this.mUIPART_CloseButton == null))
                {
                    this.mUIPART_CloseButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPART_CloseButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_Close";
                    this.mUIPART_CloseButton.WindowTitles.Add("Pokédex");
                    #endregion
                }
                return this.mUIPART_CloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIGetPokémonButton;
        
        private UILstPokemonList mUILstPokemonList;
        
        private UIMovesetGroup mUIMovesetGroup;
        
        private UIPokémonstatsGroup mUIPokémonstatsGroup;
        
        private WpfButton mUIPART_CloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILstPokemonList : WpfList
    {
        
        public UILstPokemonList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "LstPokemon";
            this.WindowTitles.Add("Pokédex");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIPokéDexPokemonListItem
        {
            get
            {
                if ((this.mUIPokéDexPokemonListItem == null))
                {
                    this.mUIPokéDexPokemonListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIPokéDexPokemonListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "PokéDex.Pokemon";
                    this.mUIPokéDexPokemonListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "64";
                    this.mUIPokéDexPokemonListItem.WindowTitles.Add("Pokédex");
                    #endregion
                }
                return this.mUIPokéDexPokemonListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIPokéDexPokemonListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMovesetGroup : WpfGroup
    {
        
        public UIMovesetGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "Gmoves";
            this.WindowTitles.Add("Pokédex");
            #endregion
        }
        
        #region Properties
        public UILstMovesList UILstMovesList
        {
            get
            {
                if ((this.mUILstMovesList == null))
                {
                    this.mUILstMovesList = new UILstMovesList(this);
                }
                return this.mUILstMovesList;
            }
        }
        #endregion
        
        #region Fields
        private UILstMovesList mUILstMovesList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILstMovesList : WpfList
    {
        
        public UILstMovesList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "lstMoves";
            this.WindowTitles.Add("Pokédex");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIPokéDexLevelListItem
        {
            get
            {
                if ((this.mUIPokéDexLevelListItem == null))
                {
                    this.mUIPokéDexLevelListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIPokéDexLevelListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "PokéDex.Level";
                    this.mUIPokéDexLevelListItem.SearchProperties[WpfListItem.PropertyNames.Instance] = "15";
                    this.mUIPokéDexLevelListItem.WindowTitles.Add("Pokédex");
                    #endregion
                }
                return this.mUIPokéDexLevelListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIPokéDexLevelListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPokémonstatsGroup : WpfGroup
    {
        
        public UIPokémonstatsGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "GInfo";
            this.WindowTitles.Add("Pokédex");
            #endregion
        }
        
        #region Properties
        public UIKadabraText UIKadabraText
        {
            get
            {
                if ((this.mUIKadabraText == null))
                {
                    this.mUIKadabraText = new UIKadabraText(this);
                }
                return this.mUIKadabraText;
            }
        }
        #endregion
        
        #region Fields
        private UIKadabraText mUIKadabraText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIKadabraText : WpfText
    {
        
        public UIKadabraText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "LblName";
            this.WindowTitles.Add("Pokédex");
            #endregion
        }
        
        #region Properties
        public WpfText UIKadabraText1
        {
            get
            {
                if ((this.mUIKadabraText1 == null))
                {
                    this.mUIKadabraText1 = new WpfText(this);
                    #region Search Criteria
                    this.mUIKadabraText1.SearchProperties[WpfText.PropertyNames.Name] = "Kadabra";
                    this.mUIKadabraText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIKadabraText1.WindowTitles.Add("Pokédex");
                    #endregion
                }
                return this.mUIKadabraText1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIKadabraText1;
        #endregion
    }
}
